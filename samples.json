{
  "javascript": {
    "/restapi": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi');"
    },
    "/restapi/v1.0/account/{accountId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}`);"
    },
    "/restapi/v1.0/account/{accountId}/active-calls": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/active-calls`, listCompanyActiveCallsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/answering-rule": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/answering-rule`, companyAnsweringRuleRequest);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/answering-rule`);"
    },
    "/restapi/v1.0/account/{accountId}/answering-rule/{ruleId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/answering-rule/${ruleId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/answering-rule/${ruleId}`, companyAnsweringRuleUpdate);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/answering-rule/${ruleId}`);"
    },
    "/restapi/v1.0/account/{accountId}/business-address": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/business-address`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/business-address`, modifyAccountBusinessAddressRequest);"
    },
    "/restapi/v1.0/account/{accountId}/business-hours": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/business-hours`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/business-hours`, companyBusinessHoursUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/call-log": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-log`, loadCompanyCallLogParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-log/{callRecordId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-log/${callRecordId}`);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-monitoring-groups`, createCallMonitoringGroupRequest);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-monitoring-groups`, listCallMonitoringGroupsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}": {
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}`, createCallMonitoringGroupRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}`);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}/bulk-assign`, callMonitoringBulkAssign);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}/members": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}/members`, listCallMonitoringGroupMembersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-queues": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-queues`, listCallQueuesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-queues/{groupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-queues/${groupId}/bulk-assign`, callQueueBulkAssignResource);"
    },
    "/restapi/v1.0/account/{accountId}/call-queues/{groupId}/members": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-queues/${groupId}/members`, listCallQueueMembersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-recording`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/call-recording`, callRecordingSettingsResource);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-recording/bulk-assign`, bulkAccountCallRecordingsResource);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/custom-greetings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-recording/custom-greetings`, listCallRecordingCustomGreetingsParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/call-recording/custom-greetings`);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/custom-greetings/{greetingId}": {
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/call-recording/custom-greetings/${greetingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/extensions": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-recording/extensions`);"
    },
    "/restapi/v1.0/account/{accountId}/department/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/department/bulk-assign`, departmentBulkAssignResource);"
    },
    "/restapi/v1.0/account/{accountId}/department/{departmentId}/members": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/department/${departmentId}/members`, listDepartmentMembersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/device/{deviceId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/device/${deviceId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/device/${deviceId}`, accountDeviceUpdate);"
    },
    "/restapi/v1.0/account/{accountId}/directory/entries": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/directory/entries`, listDirectoryEntriesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/directory/entries/search": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/directory/entries/search`, searchDirectoryEntriesRequest);"
    },
    "/restapi/v1.0/account/{accountId}/directory/federation": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/directory/federation`);"
    },
    "/restapi/v1.0/account/{accountId}/extension": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension`, listExtensionsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension`, extensionCreationRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}`, extensionUpdateRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/active-calls": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/active-calls`, listExtensionActiveCallsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book-sync": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book-sync`, syncAddressBookParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact`, listContactsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact`, personalContactResource, createContactParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact/${contactId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact/${contactId}`, personalContactResource, updateContactParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact/${contactId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/answering-rule": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule`, listAnsweringRulesParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule`, createAnsweringRuleRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule/${ruleId}`, loadAnsweringRuleParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule/${ruleId}`, updateAnsweringRuleRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule/${ruleId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/authz-profile": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/authz-profile`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/authz-profile/check": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/authz-profile/check`, checkUserPermissionParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/business-hours": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/business-hours`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/business-hours`, userBusinessHoursUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log`, loadUserCallLogParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log`, deleteUserCallLogParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log-sync": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log-sync`, syncUserCallLogParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log/${callRecordId}`, getCallRecordsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking`, callerBlockingSettingsUpdate);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers`, listBlockedAllowedPhoneNumberParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers`, addBlockedAllowedPhoneNumber);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/bulk-update": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/bulk-update`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/${blockedNumberId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/${blockedNumberId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/${blockedNumberId}`, addBlockedAllowedPhoneNumber);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-id": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-id`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-id`, extensionCallerIdInfo);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/company-pager": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/company-pager`, createInternalTextMessageRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/conferencing": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/conferencing`, loadConferencingInfoParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/conferencing`, updateConferencingInfoRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/device": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/device`, listExtensionDevicesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/favorite": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/favorite`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/favorite`, favoriteCollection);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/fax": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('attachment', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/fax`, formData);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/forwarding-number": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number`, listExtensionForwardingNumbersParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number`, createForwardingNumberRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number/${forwardingNumberId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number/${forwardingNumberId}`, updateForwardingNumberRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number/${forwardingNumberId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/grant": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/grant`, listExtensionGrantsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/greeting": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('audio', fs.readFileSync('./test.mp3'), { filename: 'text.mp3' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/greeting`, formData, customGreetingRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/greeting/{greetingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/greeting/${greetingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting`);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting`, meetingRequestResource);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting-recordings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting-recordings`, listUserMeetingRecordingsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/service-info": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/service-info`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}`, meetingRequestResource);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}/end": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}/end`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store`, listMessagesParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store`, deleteMessagesByFilterParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}`, updateMessageRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}`, deleteMessageParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageId}/content/{attachmentId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}/content/${attachmentId}`, getMessageAttachmentByIdParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-sync": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-sync`, syncMessagesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/notification-settings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/notification-settings`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/notification-settings`, notificationSettingsUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/phone-number": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/phone-number`, listExtensionPhoneNumbersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/presence": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/presence`, getPresenceStatusParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/presence`, presenceInfoResource);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/profile-image": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image`);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('image', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image`, formData);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('image', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image`, formData);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/profile-image/{scaleSize}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image/${scaleSize}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ring-out": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ring-out`, makeRingOutRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ring-out/{ringoutId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ring-out/${ringoutId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ring-out/${ringoutId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ringout": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ringout`, makeRingOutRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ringout/{ringoutId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ringout/${ringoutId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ringout/${ringoutId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/sms": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/sms`, createSMSMessage);"
    },
    "/restapi/v1.0/account/{accountId}/greeting": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('audio', fs.readFileSync('./test.mp3'), { filename: 'text.mp3' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/greeting`, formData, customCompanyGreetingRequest);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-menus": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/ivr-menus`, iVRMenuInfo);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-menus/{ivrMenuId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-menus/${ivrMenuId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/ivr-menus/${ivrMenuId}`, iVRMenuInfo);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-prompts": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('attachment', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/ivr-prompts`, formData);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-prompts`);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-prompts/{promptId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}`);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-prompts/{promptId}/content": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}/content`);"
    },
    "/restapi/v1.0/account/{accountId}/meeting-recordings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/meeting-recordings`, listAccountMeetingRecordingsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-configuration": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-configuration`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/message-store-configuration`, messageStoreConfiguration);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/message-store-report`, createMessageStoreReportRequest);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report/{taskId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-report/${taskId}`);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report/{taskId}/archive": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-report/${taskId}/archive`);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report/{taskId}/archive/{archiveId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-report/${taskId}/archive/${archiveId}`);"
    },
    "/restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/paging-only-groups/${pagingOnlyGroupId}/bulk-assign`, editPagingGroupRequest);"
    },
    "/restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/devices": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/paging-only-groups/${pagingOnlyGroupId}/devices`, listPagingGroupDevicesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/users": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/paging-only-groups/${pagingOnlyGroupId}/users`, listPagingGroupUsersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/phone-number": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/phone-number`, listAccountPhoneNumbersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/phone-number/{phoneNumberId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/phone-number/${phoneNumberId}`);"
    },
    "/restapi/v1.0/account/{accountId}/presence": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/presence`, accountPresenceParameters);"
    },
    "/restapi/v1.0/account/{accountId}/recording/{recordingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/recording/${recordingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/recording/{recordingId}/content": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/recording/${recordingId}/content`);"
    },
    "/restapi/v1.0/account/{accountId}/service-info": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/service-info`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}`, getCallSessionStatusParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}`, partyUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/flip": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/flip`, callPartyFlip);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/forward": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/forward`, forwardTarget);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/hold": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/hold`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/recordings": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/recordings`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/recordings/{recordingId}": {
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/recordings/${recordingId}`, callRecordingUpdate, pauseResumeCallRecordingParameters);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/reject": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/reject`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/transfer": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/transfer`, transferTarget);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/unhold": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/unhold`);"
    },
    "/restapi/v1.0/account/{accountId}/templates": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/templates`, listTemplatesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/templates/{templateId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/templates/${templateId}`);"
    },
    "/restapi/v1.0/client-info/sip-provision": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/client-info/sip-provision', createSipRegistrationRequest);"
    },
    "/restapi/v1.0/dictionary/country": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/country', listCountriesParameters);"
    },
    "/restapi/v1.0/dictionary/country/{countryId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/country/${countryId}`);"
    },
    "/restapi/v1.0/dictionary/fax-cover-page": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/fax-cover-page', listFaxCoverPagesParameters);"
    },
    "/restapi/v1.0/dictionary/greeting": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/greeting', listStandardGreetingsParameters);"
    },
    "/restapi/v1.0/dictionary/greeting/{greetingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/greeting/${greetingId}`);"
    },
    "/restapi/v1.0/dictionary/language": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/language');"
    },
    "/restapi/v1.0/dictionary/language/{languageId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/language/${languageId}`);"
    },
    "/restapi/v1.0/dictionary/location": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/location', listLocationsParameters);"
    },
    "/restapi/v1.0/dictionary/state": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/state', listStatesParameters);"
    },
    "/restapi/v1.0/dictionary/state/{stateId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/state/${stateId}`);"
    },
    "/restapi/v1.0/dictionary/timezone": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/timezone', listTimezonesParameters);"
    },
    "/restapi/v1.0/dictionary/timezone/{timezoneId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/timezone/${timezoneId}`, loadTimezoneParameters);"
    },
    "/restapi/v1.0/glip/cards": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/cards', glipMessageAttachmentInfoRequest, createGlipCardParameters);"
    },
    "/restapi/v1.0/glip/cards/{cardId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/cards/${cardId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/cards/${cardId}`, glipMessageAttachmentInfoRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/cards/${cardId}`);"
    },
    "/restapi/v1.0/glip/chats": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/chats', listGlipChatsParameters);"
    },
    "/restapi/v1.0/glip/chats/{chatId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/chats/${chatId}`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/favorite": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/favorite`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/read": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/read`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/unfavorite": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/unfavorite`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/unread": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/unread`);"
    },
    "/restapi/v1.0/glip/companies/{companyId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/companies/${companyId}`);"
    },
    "/restapi/v1.0/glip/conversations": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/conversations', listGlipConversationsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/conversations', glipPostMembersListBody);"
    },
    "/restapi/v1.0/glip/conversations/{chatId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/conversations/${chatId}`);"
    },
    "/restapi/v1.0/glip/data-export": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/data-export', createDataExportTaskRequest);"
    },
    "/restapi/v1.0/glip/data-export/{taskId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/data-export/${taskId}`);"
    },
    "/restapi/v1.0/glip/data-export/{taskId}/archive/{archiveId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/data-export/${taskId}/archive/${archiveId}`);"
    },
    "/restapi/v1.0/glip/events": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/events', loadGlipEventsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/events', glipEventCreate);"
    },
    "/restapi/v1.0/glip/events/{eventId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/events/${eventId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/events/${eventId}`, glipEventCreate);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/events/${eventId}`);"
    },
    "/restapi/v1.0/glip/everyone": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/everyone');",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch('/restapi/v1.0/glip/everyone', updateGlipEveryoneRequest);"
    },
    "/restapi/v1.0/glip/favorites": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/favorites', listFavoriteChatsParameters);"
    },
    "/restapi/v1.0/glip/files": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post('/restapi/v1.0/glip/files', formData, createGlipFileParameters);"
    },
    "/restapi/v1.0/glip/groups": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/groups', listGlipGroupsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/groups', glipCreateGroup);"
    },
    "/restapi/v1.0/glip/groups/{groupId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}`);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/bulk-assign`, editGroupRequest);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/events": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/events`, glipEventCreate);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/events`);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/notes": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/notes`, loadGroupNotesParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/notes`, glipNoteCreate);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/posts": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/posts`, listGlipGroupPostsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/posts`, glipCreatePost);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/posts/{postId}/text": {
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/groups/${groupId}/posts/${postId}/text`, text, {}, { headers: { 'Content-Type': 'text/plain' } });"
    },
    "/restapi/v1.0/glip/groups/{groupId}/webhooks": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/webhooks`);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/webhooks`);"
    },
    "/restapi/v1.0/glip/notes": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/notes', loadUserNotesParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/notes', glipNoteCreate);"
    },
    "/restapi/v1.0/glip/notes/{noteId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/notes/${noteId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/notes/${noteId}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/glip/notes/${noteId}`, glipNoteCreate, patchNoteParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/notes/${noteId}`, glipNoteCreate);"
    },
    "/restapi/v1.0/glip/notes/{noteId}/lock": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/notes/${noteId}/lock`);"
    },
    "/restapi/v1.0/glip/notes/{noteId}/publish": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/notes/${noteId}/publish`);"
    },
    "/restapi/v1.0/glip/notes/{noteId}/unlock": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/notes/${noteId}/unlock`);"
    },
    "/restapi/v1.0/glip/persons/{personId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/persons/${personId}`);"
    },
    "/restapi/v1.0/glip/posts": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/posts', listGlipPostsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/posts', glipCreatePost);"
    },
    "/restapi/v1.0/glip/preferences": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/preferences');"
    },
    "/restapi/v1.0/glip/recent/chats": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/recent/chats', listRecentChatsParameters);"
    },
    "/restapi/v1.0/glip/teams": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/teams', listGlipTeamsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/teams', glipPostTeamBody);"
    },
    "/restapi/v1.0/glip/teams/{chatId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/teams/${chatId}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/glip/teams/${chatId}`, glipPatchTeamBody);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/teams/${chatId}`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/add": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/add`, glipPostMembersListBody);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/archive": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/archive`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/join": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/join`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/leave": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/leave`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/remove": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/remove`, glipPostMembersIdsListBody);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/unarchive": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/unarchive`);"
    },
    "/restapi/v1.0/glip/webhooks": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/webhooks');"
    },
    "/restapi/v1.0/glip/webhooks/{webhookId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/webhooks/${webhookId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/webhooks/${webhookId}`);"
    },
    "/restapi/v1.0/glip/webhooks/{webhookId}/activate": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/webhooks/${webhookId}/activate`);"
    },
    "/restapi/v1.0/glip/webhooks/{webhookId}/suspend": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/webhooks/${webhookId}/suspend`);"
    },
    "/restapi/v1.0/number-parser/parse": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/number-parser/parse', parsePhoneNumberRequest, parsePhoneNumberParameters);"
    },
    "/restapi/v1.0/status": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/status');"
    },
    "/restapi/v1.0/subscription": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/subscription');",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/subscription', createSubscriptionRequest);"
    },
    "/restapi/v1.0/subscription/{subscriptionId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/subscription/${subscriptionId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/subscription/${subscriptionId}`, modifySubscriptionRequest, updateSubscriptionParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/subscription/${subscriptionId}`);"
    },
    "/restapi/v1.0/subscription/{subscriptionId}/renew": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/subscription/${subscriptionId}/renew`);"
    },
    "/restapi/{apiVersion}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/${apiVersion}`);"
    },
    "/scim/health": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/health');"
    },
    "/scim/v2/ServiceProviderConfig": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/v2/ServiceProviderConfig');"
    },
    "/scim/v2/Users": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/v2/Users', searchViaGet2Parameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/scim/v2/Users', user);"
    },
    "/scim/v2/Users/.search": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/scim/v2/Users/.search', searchRequest);"
    },
    "/scim/v2/Users/{id}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/scim/v2/Users/${id}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/scim/v2/Users/${id}`, user);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/scim/v2/Users/${id}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/scim/v2/Users/${id}`, userPatch);"
    },
    "/scim/v2/health": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/v2/health');"
    }
  },
  "csharp": {
    "/restapi": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi');"
    },
    "/restapi/v1.0/account/{accountId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}`);"
    },
    "/restapi/v1.0/account/{accountId}/active-calls": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/active-calls`, listCompanyActiveCallsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/answering-rule": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/answering-rule`, companyAnsweringRuleRequest);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/answering-rule`);"
    },
    "/restapi/v1.0/account/{accountId}/answering-rule/{ruleId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/answering-rule/${ruleId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/answering-rule/${ruleId}`, companyAnsweringRuleUpdate);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/answering-rule/${ruleId}`);"
    },
    "/restapi/v1.0/account/{accountId}/business-address": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/business-address`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/business-address`, modifyAccountBusinessAddressRequest);"
    },
    "/restapi/v1.0/account/{accountId}/business-hours": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/business-hours`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/business-hours`, companyBusinessHoursUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/call-log": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-log`, loadCompanyCallLogParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-log/{callRecordId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-log/${callRecordId}`);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-monitoring-groups`, createCallMonitoringGroupRequest);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-monitoring-groups`, listCallMonitoringGroupsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}": {
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}`, createCallMonitoringGroupRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}`);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}/bulk-assign`, callMonitoringBulkAssign);"
    },
    "/restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}/members": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-monitoring-groups/${groupId}/members`, listCallMonitoringGroupMembersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-queues": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-queues`, listCallQueuesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-queues/{groupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-queues/${groupId}/bulk-assign`, callQueueBulkAssignResource);"
    },
    "/restapi/v1.0/account/{accountId}/call-queues/{groupId}/members": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-queues/${groupId}/members`, listCallQueueMembersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-recording`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/call-recording`, callRecordingSettingsResource);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/call-recording/bulk-assign`, bulkAccountCallRecordingsResource);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/custom-greetings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-recording/custom-greetings`, listCallRecordingCustomGreetingsParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/call-recording/custom-greetings`);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/custom-greetings/{greetingId}": {
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/call-recording/custom-greetings/${greetingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/call-recording/extensions": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/call-recording/extensions`);"
    },
    "/restapi/v1.0/account/{accountId}/department/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/department/bulk-assign`, departmentBulkAssignResource);"
    },
    "/restapi/v1.0/account/{accountId}/department/{departmentId}/members": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/department/${departmentId}/members`, listDepartmentMembersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/device/{deviceId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/device/${deviceId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/device/${deviceId}`, accountDeviceUpdate);"
    },
    "/restapi/v1.0/account/{accountId}/directory/entries": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/directory/entries`, listDirectoryEntriesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/directory/entries/search": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/directory/entries/search`, searchDirectoryEntriesRequest);"
    },
    "/restapi/v1.0/account/{accountId}/directory/federation": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/directory/federation`);"
    },
    "/restapi/v1.0/account/{accountId}/extension": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension`, listExtensionsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension`, extensionCreationRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}`, extensionUpdateRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/active-calls": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/active-calls`, listExtensionActiveCallsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book-sync": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book-sync`, syncAddressBookParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact`, listContactsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact`, personalContactResource, createContactParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact/${contactId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact/${contactId}`, personalContactResource, updateContactParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/address-book/contact/${contactId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/answering-rule": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule`, listAnsweringRulesParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule`, createAnsweringRuleRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule/${ruleId}`, loadAnsweringRuleParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule/${ruleId}`, updateAnsweringRuleRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/answering-rule/${ruleId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/authz-profile": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/authz-profile`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/authz-profile/check": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/authz-profile/check`, checkUserPermissionParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/business-hours": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/business-hours`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/business-hours`, userBusinessHoursUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log`, loadUserCallLogParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log`, deleteUserCallLogParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log-sync": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log-sync`, syncUserCallLogParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/call-log/${callRecordId}`, getCallRecordsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking`, callerBlockingSettingsUpdate);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers`, listBlockedAllowedPhoneNumberParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers`, addBlockedAllowedPhoneNumber);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/bulk-update": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/bulk-update`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/${blockedNumberId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/${blockedNumberId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-blocking/phone-numbers/${blockedNumberId}`, addBlockedAllowedPhoneNumber);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-id": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-id`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/caller-id`, extensionCallerIdInfo);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/company-pager": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/company-pager`, createInternalTextMessageRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/conferencing": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/conferencing`, loadConferencingInfoParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/conferencing`, updateConferencingInfoRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/device": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/device`, listExtensionDevicesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/favorite": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/favorite`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/favorite`, favoriteCollection);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/fax": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('attachment', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/fax`, formData);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/forwarding-number": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number`, listExtensionForwardingNumbersParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number`, createForwardingNumberRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number/${forwardingNumberId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number/${forwardingNumberId}`, updateForwardingNumberRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/forwarding-number/${forwardingNumberId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/grant": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/grant`, listExtensionGrantsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/greeting": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('audio', fs.readFileSync('./test.mp3'), { filename: 'text.mp3' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/greeting`, formData, customGreetingRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/greeting/{greetingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/greeting/${greetingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting`);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting`, meetingRequestResource);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting-recordings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting-recordings`, listUserMeetingRecordingsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/service-info": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/service-info`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}`, meetingRequestResource);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}/end": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/meeting/${meetingId}/end`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store`, listMessagesParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store`, deleteMessagesByFilterParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}`, updateMessageRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}`, deleteMessageParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageId}/content/{attachmentId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-store/${messageId}/content/${attachmentId}`, getMessageAttachmentByIdParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/message-sync": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/message-sync`, syncMessagesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/notification-settings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/notification-settings`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/notification-settings`, notificationSettingsUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/phone-number": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/phone-number`, listExtensionPhoneNumbersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/presence": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/presence`, getPresenceStatusParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/presence`, presenceInfoResource);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/profile-image": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image`);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('image', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image`, formData);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('image', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image`, formData);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/profile-image/{scaleSize}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/profile-image/${scaleSize}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ring-out": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ring-out`, makeRingOutRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ring-out/{ringoutId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ring-out/${ringoutId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ring-out/${ringoutId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ringout": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ringout`, makeRingOutRequest);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/ringout/{ringoutId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ringout/${ringoutId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/ringout/${ringoutId}`);"
    },
    "/restapi/v1.0/account/{accountId}/extension/{extensionId}/sms": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/extension/${extensionId}/sms`, createSMSMessage);"
    },
    "/restapi/v1.0/account/{accountId}/greeting": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('audio', fs.readFileSync('./test.mp3'), { filename: 'text.mp3' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/greeting`, formData, customCompanyGreetingRequest);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-menus": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/ivr-menus`, iVRMenuInfo);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-menus/{ivrMenuId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-menus/${ivrMenuId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/ivr-menus/${ivrMenuId}`, iVRMenuInfo);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-prompts": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', Buffer.from(JSON.stringify(body)), { filename: 'request.json' });\nformData.append('attachment', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/ivr-prompts`, formData);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-prompts`);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-prompts/{promptId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}`);"
    },
    "/restapi/v1.0/account/{accountId}/ivr-prompts/{promptId}/content": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/ivr-prompts/${promptId}/content`);"
    },
    "/restapi/v1.0/account/{accountId}/meeting-recordings": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/meeting-recordings`, listAccountMeetingRecordingsParameters);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-configuration": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-configuration`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/account/${accountId}/message-store-configuration`, messageStoreConfiguration);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/message-store-report`, createMessageStoreReportRequest);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report/{taskId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-report/${taskId}`);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report/{taskId}/archive": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-report/${taskId}/archive`);"
    },
    "/restapi/v1.0/account/{accountId}/message-store-report/{taskId}/archive/{archiveId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/message-store-report/${taskId}/archive/${archiveId}`);"
    },
    "/restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/paging-only-groups/${pagingOnlyGroupId}/bulk-assign`, editPagingGroupRequest);"
    },
    "/restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/devices": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/paging-only-groups/${pagingOnlyGroupId}/devices`, listPagingGroupDevicesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/users": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/paging-only-groups/${pagingOnlyGroupId}/users`, listPagingGroupUsersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/phone-number": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/phone-number`, listAccountPhoneNumbersParameters);"
    },
    "/restapi/v1.0/account/{accountId}/phone-number/{phoneNumberId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/phone-number/${phoneNumberId}`);"
    },
    "/restapi/v1.0/account/{accountId}/presence": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/presence`, accountPresenceParameters);"
    },
    "/restapi/v1.0/account/{accountId}/recording/{recordingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/recording/${recordingId}`);"
    },
    "/restapi/v1.0/account/{accountId}/recording/{recordingId}/content": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/recording/${recordingId}/content`);"
    },
    "/restapi/v1.0/account/{accountId}/service-info": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/service-info`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}`, getCallSessionStatusParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}`, partyUpdateRequest);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/flip": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/flip`, callPartyFlip);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/forward": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/forward`, forwardTarget);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/hold": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/hold`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/recordings": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/recordings`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/recordings/{recordingId}": {
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/recordings/${recordingId}`, callRecordingUpdate, pauseResumeCallRecordingParameters);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/reject": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/reject`);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/transfer": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/transfer`, transferTarget);"
    },
    "/restapi/v1.0/account/{accountId}/telephony/sessions/{sessionId}/parties/{partyId}/unhold": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/account/${accountId}/telephony/sessions/${sessionId}/parties/${partyId}/unhold`);"
    },
    "/restapi/v1.0/account/{accountId}/templates": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/templates`, listTemplatesParameters);"
    },
    "/restapi/v1.0/account/{accountId}/templates/{templateId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/account/${accountId}/templates/${templateId}`);"
    },
    "/restapi/v1.0/client-info/sip-provision": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/client-info/sip-provision', createSipRegistrationRequest);"
    },
    "/restapi/v1.0/dictionary/country": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/country', listCountriesParameters);"
    },
    "/restapi/v1.0/dictionary/country/{countryId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/country/${countryId}`);"
    },
    "/restapi/v1.0/dictionary/fax-cover-page": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/fax-cover-page', listFaxCoverPagesParameters);"
    },
    "/restapi/v1.0/dictionary/greeting": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/greeting', listStandardGreetingsParameters);"
    },
    "/restapi/v1.0/dictionary/greeting/{greetingId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/greeting/${greetingId}`);"
    },
    "/restapi/v1.0/dictionary/language": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/language');"
    },
    "/restapi/v1.0/dictionary/language/{languageId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/language/${languageId}`);"
    },
    "/restapi/v1.0/dictionary/location": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/location', listLocationsParameters);"
    },
    "/restapi/v1.0/dictionary/state": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/state', listStatesParameters);"
    },
    "/restapi/v1.0/dictionary/state/{stateId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/state/${stateId}`);"
    },
    "/restapi/v1.0/dictionary/timezone": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/dictionary/timezone', listTimezonesParameters);"
    },
    "/restapi/v1.0/dictionary/timezone/{timezoneId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/dictionary/timezone/${timezoneId}`, loadTimezoneParameters);"
    },
    "/restapi/v1.0/glip/cards": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/cards', glipMessageAttachmentInfoRequest, createGlipCardParameters);"
    },
    "/restapi/v1.0/glip/cards/{cardId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/cards/${cardId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/cards/${cardId}`, glipMessageAttachmentInfoRequest);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/cards/${cardId}`);"
    },
    "/restapi/v1.0/glip/chats": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/chats', listGlipChatsParameters);"
    },
    "/restapi/v1.0/glip/chats/{chatId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/chats/${chatId}`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/favorite": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/favorite`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/read": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/read`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/unfavorite": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/unfavorite`);"
    },
    "/restapi/v1.0/glip/chats/{chatId}/unread": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/chats/${chatId}/unread`);"
    },
    "/restapi/v1.0/glip/companies/{companyId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/companies/${companyId}`);"
    },
    "/restapi/v1.0/glip/conversations": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/conversations', listGlipConversationsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/conversations', glipPostMembersListBody);"
    },
    "/restapi/v1.0/glip/conversations/{chatId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/conversations/${chatId}`);"
    },
    "/restapi/v1.0/glip/data-export": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/data-export', createDataExportTaskRequest);"
    },
    "/restapi/v1.0/glip/data-export/{taskId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/data-export/${taskId}`);"
    },
    "/restapi/v1.0/glip/data-export/{taskId}/archive/{archiveId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/data-export/${taskId}/archive/${archiveId}`);"
    },
    "/restapi/v1.0/glip/events": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/events', loadGlipEventsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/events', glipEventCreate);"
    },
    "/restapi/v1.0/glip/events/{eventId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/events/${eventId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/events/${eventId}`, glipEventCreate);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/events/${eventId}`);"
    },
    "/restapi/v1.0/glip/everyone": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/everyone');",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch('/restapi/v1.0/glip/everyone', updateGlipEveryoneRequest);"
    },
    "/restapi/v1.0/glip/favorites": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/favorites', listFavoriteChatsParameters);"
    },
    "/restapi/v1.0/glip/files": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst FormData = require('form-data');\nconst formData = new FormData();\nformData.append('body', fs.readFileSync('./test.png'), { filename: 'text.png' });\nconst r = await platform.post('/restapi/v1.0/glip/files', formData, createGlipFileParameters);"
    },
    "/restapi/v1.0/glip/groups": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/groups', listGlipGroupsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/groups', glipCreateGroup);"
    },
    "/restapi/v1.0/glip/groups/{groupId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}`);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/bulk-assign": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/bulk-assign`, editGroupRequest);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/events": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/events`, glipEventCreate);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/events`);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/notes": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/notes`, loadGroupNotesParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/notes`, glipNoteCreate);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/posts": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/posts`, listGlipGroupPostsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/posts`, glipCreatePost);"
    },
    "/restapi/v1.0/glip/groups/{groupId}/posts/{postId}/text": {
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/groups/${groupId}/posts/${postId}/text`, text, {}, { headers: { 'Content-Type': 'text/plain' } });"
    },
    "/restapi/v1.0/glip/groups/{groupId}/webhooks": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/groups/${groupId}/webhooks`);",
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/groups/${groupId}/webhooks`);"
    },
    "/restapi/v1.0/glip/notes": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/notes', loadUserNotesParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/notes', glipNoteCreate);"
    },
    "/restapi/v1.0/glip/notes/{noteId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/notes/${noteId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/notes/${noteId}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/glip/notes/${noteId}`, glipNoteCreate, patchNoteParameters);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/glip/notes/${noteId}`, glipNoteCreate);"
    },
    "/restapi/v1.0/glip/notes/{noteId}/lock": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/notes/${noteId}/lock`);"
    },
    "/restapi/v1.0/glip/notes/{noteId}/publish": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/notes/${noteId}/publish`);"
    },
    "/restapi/v1.0/glip/notes/{noteId}/unlock": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/notes/${noteId}/unlock`);"
    },
    "/restapi/v1.0/glip/persons/{personId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/persons/${personId}`);"
    },
    "/restapi/v1.0/glip/posts": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/posts', listGlipPostsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/posts', glipCreatePost);"
    },
    "/restapi/v1.0/glip/preferences": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/preferences');"
    },
    "/restapi/v1.0/glip/recent/chats": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/recent/chats', listRecentChatsParameters);"
    },
    "/restapi/v1.0/glip/teams": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/teams', listGlipTeamsParameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/glip/teams', glipPostTeamBody);"
    },
    "/restapi/v1.0/glip/teams/{chatId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/teams/${chatId}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/restapi/v1.0/glip/teams/${chatId}`, glipPatchTeamBody);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/teams/${chatId}`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/add": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/add`, glipPostMembersListBody);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/archive": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/archive`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/join": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/join`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/leave": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/leave`);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/remove": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/remove`, glipPostMembersIdsListBody);"
    },
    "/restapi/v1.0/glip/teams/{chatId}/unarchive": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/teams/${chatId}/unarchive`);"
    },
    "/restapi/v1.0/glip/webhooks": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/glip/webhooks');"
    },
    "/restapi/v1.0/glip/webhooks/{webhookId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/glip/webhooks/${webhookId}`);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/glip/webhooks/${webhookId}`);"
    },
    "/restapi/v1.0/glip/webhooks/{webhookId}/activate": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/webhooks/${webhookId}/activate`);"
    },
    "/restapi/v1.0/glip/webhooks/{webhookId}/suspend": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/glip/webhooks/${webhookId}/suspend`);"
    },
    "/restapi/v1.0/number-parser/parse": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/number-parser/parse', parsePhoneNumberRequest, parsePhoneNumberParameters);"
    },
    "/restapi/v1.0/status": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/status');"
    },
    "/restapi/v1.0/subscription": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/restapi/v1.0/subscription');",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/restapi/v1.0/subscription', createSubscriptionRequest);"
    },
    "/restapi/v1.0/subscription/{subscriptionId}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/v1.0/subscription/${subscriptionId}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/restapi/v1.0/subscription/${subscriptionId}`, modifySubscriptionRequest, updateSubscriptionParameters);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/restapi/v1.0/subscription/${subscriptionId}`);"
    },
    "/restapi/v1.0/subscription/{subscriptionId}/renew": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post(`/restapi/v1.0/subscription/${subscriptionId}/renew`);"
    },
    "/restapi/{apiVersion}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/restapi/${apiVersion}`);"
    },
    "/scim/health": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/health');"
    },
    "/scim/v2/ServiceProviderConfig": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/v2/ServiceProviderConfig');"
    },
    "/scim/v2/Users": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/v2/Users', searchViaGet2Parameters);",
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/scim/v2/Users', user);"
    },
    "/scim/v2/Users/.search": {
      "POST": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.post('/scim/v2/Users/.search', searchRequest);"
    },
    "/scim/v2/Users/{id}": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get(`/scim/v2/Users/${id}`);",
      "PUT": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.put(`/scim/v2/Users/${id}`, user);",
      "DELETE": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.delete(`/scim/v2/Users/${id}`);",
      "PATCH": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.patch(`/scim/v2/Users/${id}`, userPatch);"
    },
    "/scim/v2/health": {
      "GET": "const SDK = require('ringcentral');\nconst rcsdk = new SDK({server: 'serverURL', appKey: 'clientId', appSecret: 'clientSecret'});\nconst platform = rcsdk.platform();\nawait platform.login({ username: 'username', extension: 'extension', password: 'password' });\nconst r = await platform.get('/scim/v2/health');"
    }
  }
}